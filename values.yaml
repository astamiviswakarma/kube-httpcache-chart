# Default values for kube-httpcache-chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: quay.io/spaces/kube-httpcache
  tag: stable
  pullPolicy: Always

backend:
  namespace: default
  service:  must-change-it

varnish:
  storage: "malloc,128M" ## should be less or equal to resources limits

  ## run following if you haven't created one:
  ## $ kubectl create secret generic varnish-secret --from-literal=secret=$(head -c32 /dev/urandom  | base64)
  secretName: "varnish-secret"

  ## run this when using RBAC
  ## $ kubectl create serviceaccount kube-httpcache
  ## $ kubectl apply -f https://raw.githubusercontent.com/mittwald/kube-httpcache/master/deploy/rbac.yaml
  ## $ kubectl create rolebinding kube-httpcache --role=kube-httpcache --serviceaccount=kube-httpcache
  ## uncomment following line when done.
  # serviceAccountName: "kube-httpcache"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []

  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
